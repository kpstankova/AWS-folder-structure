{
  "compilerOptions": {
    "jsx": "react-jsx",
    "target": "ESNext",                                  /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */
    "lib": ["dom", "ESNext"],                           /* Specify a set of bundled library declaration files that describe the target runtime environment. */
    "noLib": false,                                    /* Disable including any library files, including the default lib.d.ts. */
    "module": "ESNext",                                /* Specify what module code is generated. */
    "moduleResolution": "Bundler",                     /* Specify how TypeScript looks up a file from a given module specifier. */
    "baseUrl": "./",                                  /* Specify the base directory to resolve non-relative module names. */
    "resolveJsonModule": true,                        /* Enable importing .json files. */
    "declaration": false,                              /* Generate .d.ts files from TypeScript and JavaScript files in your project. */
    "sourceMap": true,                                /* Create source map files for emitted JavaScript files. */
    "removeComments": false,                           /* Disable emitting comments. */
    "preserveConstEnums": true,                       /* Disable erasing 'const enum' declarations in generated code. */
    "allowSyntheticDefaultImports": true,             /* Allow 'import x from y' when a module doesn't have a default export. */
    "esModuleInterop": true,                             /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */
    "forceConsistentCasingInFileNames": true,            /* Ensure that casing is correct in imports. */
    "strict": true,                                      /* Enable all strict type-checking options. */
    "noImplicitAny": true,                            
    "noUnusedLocals": false,                           /* Enable error reporting when local variables aren't read. */
    "noUnusedParameters": false,                       /* Raise an error when a function parameter isn't read. */
    "skipLibCheck": true                                 /* Skip type checking all .d.ts files. */
  },
  "include": ["src/", "./**/*.ts"]
}
